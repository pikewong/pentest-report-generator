using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace NotesAssistant.Findings {
    class SummaryStat {
        DataGridView stat = new DataGridView();

        public SummaryStat(DataGridView stat) {
            this.stat = stat;
        }


        public void addApplication(string applicationName) {
            DataGridViewRow row = (DataGridViewRow)stat.Rows[0].Clone();
            row.Cells[0].Value = applicationName;
            row.Cells[1].Value = 0;
            row.Cells[2].Value = 0;
            row.Cells[3].Value = 0;
            row.Cells[4].Value = 0;
            stat.Rows.Add(row);
        }

        public void removeApplication(string applicationName) {
            foreach (DataGridViewRow row in stat.Rows) {
                if (applicationName.CompareTo(row.Cells[0].Value) == 0) {
                    stat.Rows.Remove(row);
                }
            }
        }

        public void addStat(string applicationName, RiskLevel riskLevel) {
            foreach (DataGridViewRow row in stat.Rows) {
                if (applicationName.CompareTo(row.Cells[0].Value) == 0) {
                    if (riskLevel == RiskLevel.High) {
                        row.Cells[1].Value = (int)row.Cells[1].Value + 1;
                    }
                    else if (riskLevel == RiskLevel.Medium) {
                        row.Cells[2].Value = (int)row.Cells[2].Value + 1;
                    }
                    else if (riskLevel == RiskLevel.Low) {
                        row.Cells[3].Value = (int)row.Cells[3].Value + 1;
                    }
                    else if (riskLevel == RiskLevel.Informational) {
                        row.Cells[4].Value = (int)row.Cells[4].Value + 1;
                    }
                }
            }
        }

        public void removeStat(string applicationName, RiskLevel riskLevel) {
            foreach (DataGridViewRow row in stat.Rows) {
                if (applicationName.CompareTo(row.Cells[0].Value) == 0) {
                    if (riskLevel == RiskLevel.High) {
                        row.Cells[1].Value = (int)row.Cells[1].Value - 1;
                    }
                    else if (riskLevel == RiskLevel.Medium) {
                        row.Cells[2].Value = (int)row.Cells[2].Value - 1;
                    }
                    else if (riskLevel == RiskLevel.Low) {
                        row.Cells[3].Value = (int)row.Cells[3].Value - 1;
                    }
                    else if (riskLevel == RiskLevel.Informational) {
                        row.Cells[4].Value = (int)row.Cells[4].Value - 1;
                    }
                }
            }
        }


    }
}
